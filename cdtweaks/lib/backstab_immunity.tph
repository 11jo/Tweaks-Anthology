DEFINE_ACTION_FUNCTION "BACKSTAB_IMMUNITY"
BEGIN
  WITH_SCOPE BEGIN    
  
    ACTION_FOR_EACH entry IN undead plant weapon BEGIN
      OUTER_SET ~general_%entry%~ = IDS_OF_SYMBOL ("GENERAL" "%entry%")
    END
  
    ACTION_FOR_EACH entry IN slime beholder demonic mephit imp dragon elemental salamander mist solar antisolar planatar darkplanatar golem BEGIN
      OUTER_SET ~race_%entry%~ = IDS_OF_SYMBOL ("RACE" "%entry%")
    END
  
    ACTION_FOR_EACH entry IN golem_clay golem_stone golem_iron BEGIN
      OUTER_SET ~class_%entry%~ = IDS_OF_SYMBOL ("CLASS" "%entry%")
    END
  
    COPY_EXISTING_REGEXP ~^.+\.itm$~ ~override~
      READ_LONG  0x6a fx_off
      READ_SHORT 0x6e fx_idx
      READ_SHORT 0x70 fx_num
      FOR (index = fx_idx ; index < fx_num; ++index) BEGIN
        READ_SHORT (fx_off + 0x00 + (index * 0x30)) opcode
        PATCH_IF opcode = 292 BEGIN
          READ_LONG (fx_off + 0x08 + (index * 0x30)) param2
          PATCH_IF param2 BEGIN
            DEFINE_ASSOCIATIVE_ARRAY cd_backstab_items BEGIN ~%SOURCE_RES%~ => 1 END
          END
        END          
      END
      BUT_ONLY
      
    COPY_EXISTING_REGEXP "^.+\.cre$" "override"
      SET "found" = 0
      PATCH_MATCH BYTE_AT 0x271 WITH // GENERAL check
        general_undead
        general_plant
        general_weapon
        BEGIN
          SET "found" = 1
          LPF "BACKSTAB_IMMUNITY_HELPER" END
        END
        DEFAULT
      END
      PATCH_IF !("%found%") BEGIN
        PATCH_MATCH BYTE_AT 0x272 WITH // RACE check
          race_slime       
          race_beholder    
          race_demonic     
          race_mephit      
          race_imp         
          race_dragon      
          race_elemental   
          race_salamander  
          race_mist        
          race_solar       
          race_antisolar   
          race_planatar    
          race_darkplanatar
          BEGIN
            LPF "BACKSTAB_IMMUNITY_HELPER" END
          END
          race_golem
          BEGIN
            PATCH_MATCH BYTE_AT 0x273 WITH
              class_golem_clay  
              class_golem_stone 
              class_golem_iron  
              BEGIN
                LPF "BACKSTAB_IMMUNITY_HELPER" END
              END
              DEFAULT
            END
          END
          DEFAULT
        END
      END
    BUT_ONLY_IF_IT_CHANGES
  END
END

/////////////////////////////////////////////////////////////////
/*

Auxiliary function

*/
//////////////////////////////////////////////////////////////////

DEFINE_PATCH_FUNCTION "BACKSTAB_IMMUNITY_HELPER"
BEGIN
  // Initialize
  SET "found" = 0
  // Check if the immunity is already granted by its equipment
  GET_OFFSET_ARRAY "cre_v10_items" CRE_V10_ITEMS
  PHP_EACH "cre_v10_items" AS "itm_ind" => "itm_off" BEGIN
    PATCH_MATCH "%itm_ind%" WITH
      SSHORT_AT (LONG_AT 0x2B8 + 0x0) // Helmet
      SSHORT_AT (LONG_AT 0x2B8 + 0x2) // Armor
      SSHORT_AT (LONG_AT 0x2B8 + 0x4) // Shield
      SSHORT_AT (LONG_AT 0x2B8 + 0x6) // Gloves
      SSHORT_AT (LONG_AT 0x2B8 + 0x8) // Left ring
      SSHORT_AT (LONG_AT 0x2B8 + 0xA) // Right ring
      SSHORT_AT (LONG_AT 0x2B8 + 0xC) // Amulet
      SSHORT_AT (LONG_AT 0x2B8 + 0xE) // Belt
      SSHORT_AT (LONG_AT 0x2B8 + 0x10) // Boots
      SSHORT_AT (LONG_AT 0x2B8 + 0x12) // Weapon 1
      SSHORT_AT (LONG_AT 0x2B8 + 0x14) // Weapon 2
      SSHORT_AT (LONG_AT 0x2B8 + 0x16) // Weapon 3
      SSHORT_AT (LONG_AT 0x2B8 + 0x18) // Weapon 4
      SSHORT_AT (LONG_AT 0x2B8 + 0x22) // Cloak
      BEGIN
        READ_ASCII "%itm_off%" "itm_resref"
        PATCH_PHP_EACH cd_backstab_items AS itm_check => foo BEGIN
          PATCH_IF ("%itm_resref%" STRING_COMPARE_CASE "%itm_check%" = 0) BEGIN
            SET found = 1
          END
        END          
/*        INNER_PATCH_FILE "%itm_resref%.itm" BEGIN
          GET_OFFSET_ARRAY "fx_array" ITM_V10_GEN_EFFECTS
          PHP_EACH "fx_array" AS "fx_ind" => "fx_off" BEGIN
            PATCH_IF (SHORT_AT "%fx_off%" == 292) BEGIN
              PATCH_IF (SLONG_AT ("%fx_off%" + 0x8) > 0) BEGIN
                SET "found" = 1
              END
            END
          END
        END
*/
      END
      DEFAULT
    END
  END
  // Check if the immunity is already present amongst its effects
  PATCH_IF !("%found%") BEGIN
    LPF "FJ_CRE_VALIDITY" END // force the CRE file to use EFF V2 effects internally
    GET_OFFSET_ARRAY "fx_array" CRE_V10_EFFECTS
    PHP_EACH "fx_array" AS "fx_ind" => "fx_off" BEGIN
      // NB.: Unlike ordinary V2 EFF files, CRE effect V2 structures omit the 8-byte EFF V2 header!!!
      PATCH_IF (LONG_AT ("%fx_off%" + (0x10 - 0x8)) == 292) BEGIN
        PATCH_IF (SLONG_AT ("%fx_off%" + (0x20 - 0x8)) > 0) BEGIN
          SET "found" = 1
        END
      END
    END
  END
  PATCH_IF !("%found%") BEGIN
    LPF "ADD_CRE_EFFECT" INT_VAR "opcode" = 292 "target" = 1 "parameter2" = 1 "timing" = 9 END
  END
END