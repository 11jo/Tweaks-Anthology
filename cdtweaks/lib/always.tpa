MKDIR ~weidu_external/cdtweaks~

INCLUDE ~cdtweaks/lib/fj_spl_itm_reindex.tpa~ // wisp functions

<<<<<<<< ./inline/always_checks.tpa
ACTION_IF %check% %gamecheck% BEGIN
  OUTER_SET ~%var%_%gamecheck%~ = 1
END ELSE BEGIN
  OUTER_SET ~%var%_%gamecheck%~ = 0
END
>>>>>>>>

OUTER_SPRINT check ~GAME_IS~
OUTER_SPRINT var ~game_is~
ACTION_FOR_EACH gamecheck IN bg1 totsc soa tob iwd how totlm iwd2 pst bgee bg2ee iwdee pstee tutu tutu_totsc bgt eet ca iwd-in-bg2 BEGIN
  COPY ~./inline/always_checks.tpa~ ~weidu_external/cdtweaks/always_checks.tpa~ EVALUATE_BUFFER
  REINCLUDE ~weidu_external/cdtweaks/always_checks.tpa~
END
 
OUTER_SPRINT check ~GAME_INCLUDES~
OUTER_SPRINT var ~game_includes~
ACTION_FOR_EACH gamecheck IN bg1 totsc soa tob iwd how totlm iwd2 pst ca sod BEGIN
  COPY ~./inline/always_checks.tpa~ ~weidu_external/cdtweaks/always_checks.tpa~ EVALUATE_BUFFER
  REINCLUDE ~weidu_external/cdtweaks/always_checks.tpa~
END

ACTION_IF game_is_iwd  OR game_is_how OR game_is_totlm BEGIN OUTER_SET original_iwd = 1 END ELSE BEGIN OUTER_SET original_iwd = 0 END 
ACTION_IF game_is_bg1  OR game_is_totsc                BEGIN OUTER_SET original_bg1 = 1 END ELSE BEGIN OUTER_SET original_bg1 = 0 END 
ACTION_IF game_is_soa  OR game_is_tob                  BEGIN OUTER_SET original_bg2 = 1 END ELSE BEGIN OUTER_SET original_bg2 = 0 END 
ACTION_IF game_is_tutu OR game_is_tutu_totsc           BEGIN OUTER_SET tutu_gen     = 1 END ELSE BEGIN OUTER_SET tutu_gen     = 0 END 

ACTION_IF game_is_bgee OR game_is_bg2ee OR game_is_iwdee OR game_is_eet OR game_is_pstee BEGIN // ee games

  OUTER_SET enhanced_edition = 1 // re-using David's variables
  OUTER_SPRINT ~tra_location~ ~cdtweaks/languages~
  
  LOAD_TRA ~cdtweaks/languages/%LANGUAGE%/ee.tra~

  // fix tokens if an EE game using schinese
  ACTION_IF (~%LANGUAGE%~ STR_EQ ~schinese~) BEGIN
    COPY ~%MOD_FOLDER%/languages/schinese/dw_components.tra~ ~%MOD_FOLDER%/languages/schinese/dw_components.tra~
      REPLACE_TEXTUALLY ~<\([A-Z_]+\)>_~ ~<\1>~
    LOAD_TRA ~%MOD_FOLDER%/languages/schinese/dw_components.tra~
    
    // and always load ANSI strings for WeiDU installer
    LOAD_TRA ~%MOD_FOLDER%/languages/schinese_prompts/setup-%WEIDU_OS%.tra~
  END  

END ELSE BEGIN

  OUTER_SET enhanced_edition = 0
  OUTER_SPRINT ~tra_location~ ~weidu_external/cdtweaks/languages~

  // convert strings from UTF-8 for originals  
  ACTION_DEFINE_ARRAY cdnoconvert BEGIN weidu ee END
  ACTION_DEFINE_ARRAY cdreload BEGIN game END
  LAF HANDLE_CHARSETS INT_VAR from_utf8 = 1 infer_charsets = 1 
                      STR_VAR default_language = ~english~ tra_path = ~cdtweaks/languages~ out_path = ~weidu_external/cdtweaks/languages~ noconvert_array = cdnoconvert reload_array = cdreload END

  ACTION_IF game_is_soa OR game_is_tob OR game_is_bgt OR game_is_ca OR game_is_tutu OR game_is_tutu_totsc OR game_is_iwd-in-bg2 THEN BEGIN

    ACTION_FOR_EACH file IN iplot01k.itm iplot04g.itm iplot04h.itm iplot04i.itm xr2400.are xr2600.are BEGIN
      DISABLE_FROM_KEY "%file%"
    END

    INCLUDE ~cdtweaks/lib/tob2soa.tpa~ // add tob scripting to soa games; written such that it shouldn't change anything if used on tob

  END 
  
  ACTION_IF original_iwd AND MOD_IS_INSTALLED ~ab/ab.tp2~ ~0~ BEGIN
    
    INCLUDE ~cdtweaks/lib/ab_fixes.tpa~ // trying to fix the more egregious broken files of AB
    
  END  

END  

INCLUDE ~cdtweaks/lib/g3_cpmvars_master.tpa~ // sets bg/bgee/bgt/eet/tutu vars, cd_extend_bg_area_script macro 

ACTION_IF MOD_IS_INSTALLED ~tobex/tobex.tp2~ ~0~ THEN BEGIN OUTER_SET is_tobex = 1 END ELSE BEGIN OUTER_SET is_tobex = 0 END // TobEx
  
ACTION_IF game_is_eet BEGIN
  OUTER_SET bg2_chapter = 12
END ELSE BEGIN
  OUTER_SET bg2_chapter = 0
END
OUTER_FOR (i=1; i<=10; i=i+1) BEGIN
  OUTER_SET bg2_chapter = bg2_chapter + 1
  OUTER_SPRINT name_source ~bg2_chapter_%i%~
  OUTER_SET EVAL ~%name_source%~ = bg2_chapter
END

ACTION_IF FILE_EXISTS ~cdtweaks/cdtweaks.txt~ THEN BEGIN
  
  INCLUDE ~cdtweaks/cdtweaks.txt~ // config file

  ACTION_IF !VARIABLE_IS_SET romance_speed_use_config_values THEN BEGIN OUTER_SET romance_speed_use_config_values = 0 END
  ACTION_IF !VARIABLE_IS_SET minimum_stats_use_config_values THEN BEGIN OUTER_SET minimum_stats_use_config_values = 0 END
  ACTION_IF !VARIABLE_IS_SET romance_use_config_values       THEN BEGIN OUTER_SET romance_use_config_values = 0 END

END ELSE BEGIN

  OUTER_SET romance_speed_use_config_values = 0
  OUTER_SET minimum_stats_use_config_values = 0
  OUTER_SET romance_use_config_values = 0

END






DEFINE_PATCH_MACRO cd_item_info BEGIN  

  TO_LOWER vl_item
  // basic info
  READ_LONG  0x08 vl_name
  READ_LONG  0x18 vl_flags
  READ_SHORT 0x1c vl_item_type
  READ_LONG  0x1e vl_usability
  READ_ASCII 0x22 vl_anim (2)
  READ_SHORT 0x24 vl_level
  READ_BYTE  0x29 vl_kit1
  READ_BYTE  0x31 vl_prof
  READ_LONG  0x34 vl_price
  READ_SHORT 0x38 vl_stack
  READ_SHORT 0x42 vl_lore
  READ_SHORT 0x68 vl_abil_num
  READ_SHORT 0x70 vl_fx_num
  
  // check for some specific equipping effects
  READ_LONG  0x6a fx_off
  SET vl_regen_3380 = 0
  SET vl_equip_icon = 0
  SET vl_equip_blur = 0
  SET vl_equip_spelltrap = 0
  SET vl_equip_291 = 0
  FOR (index = 0 ; index < vl_fx_num ; ++index) BEGIN
    READ_SHORT (fx_off +        (index * 0x30)) opcode
    READ_LONG  (fx_off + 0x04 + (index * 0x30)) parameter1
    READ_LONG  (fx_off + 0x08 + (index * 0x30)) parameter2
    READ_BYTE  (fx_off + 0x0c + (index * 0x30)) timing
    PATCH_IF ((opcode = 98) AND (timing = 2) AND ((parameter2 < 3) OR ((parameter2 = 3) AND (parameter1 < 10)))) BEGIN SET vl_regen_3380 = 1 END // regen item for 3380
    PATCH_IF ((opcode = 142) AND (timing = 2)) BEGIN SET vl_equip_icon = 1 END                                                                   // has portrait icon as equipping effect
    PATCH_IF ((opcode = 65) AND (timing = 2)) BEGIN SET vl_equip_blur = 1 END                                                                    // has blur as equipping effect
    PATCH_IF (((opcode = 197) OR (opcode = 198) OR ((opcode > 200) AND (opcode < 206)) OR (opcode = 207) OR (opcode = 223) OR 
              ((opcode > 225) AND (opcode < 229)) OR (opcode = 259)) AND (timing = 2)) BEGIN SET vl_equip_spelltrap = opcode END                 // has spelltrap as equipping effect
    PATCH_IF ((opcode = 291) AND (timing = 2)) BEGIN SET vl_equip_291 = 1 END                                                                    // already suppresses visuals
  END

  // build arrays
  DEFINE_ASSOCIATIVE_ARRAY cd_itm_name  BEGIN ~%vl_item%~ => ~%vl_name%~ END
  DEFINE_ASSOCIATIVE_ARRAY cd_itm_flags BEGIN ~%vl_item%~ => ~%vl_flags%~ END
  DEFINE_ASSOCIATIVE_ARRAY cd_itm_type  BEGIN ~%vl_item%~ => ~%vl_item_type%~ END
  DEFINE_ASSOCIATIVE_ARRAY cd_itm_use   BEGIN ~%vl_item%~ => ~%vl_usability%~ END
  DEFINE_ASSOCIATIVE_ARRAY cd_itm_anim  BEGIN ~%vl_item%~ => ~%vl_anim%~ END
  DEFINE_ASSOCIATIVE_ARRAY cd_itm_lvl   BEGIN ~%vl_item%~ => ~%vl_level%~ END
  DEFINE_ASSOCIATIVE_ARRAY cd_itm_kit1  BEGIN ~%vl_item%~ => ~%vl_kit1%~ END
  DEFINE_ASSOCIATIVE_ARRAY cd_itm_prof  BEGIN ~%vl_item%~ => ~%vl_prof%~ END
  DEFINE_ASSOCIATIVE_ARRAY cd_itm_price BEGIN ~%vl_item%~ => ~%vl_price%~ END
  DEFINE_ASSOCIATIVE_ARRAY cd_itm_stack BEGIN ~%vl_item%~ => ~%vl_stack%~ END
  DEFINE_ASSOCIATIVE_ARRAY cd_itm_lore  BEGIN ~%vl_item%~ => ~%vl_lore%~ END
  DEFINE_ASSOCIATIVE_ARRAY cd_itm_regen BEGIN ~%vl_item%~ => ~%vl_regen_3380%~ END
  DEFINE_ASSOCIATIVE_ARRAY cd_itm_eicon BEGIN ~%vl_item%~ => ~%vl_equip_icon%~ END
  DEFINE_ASSOCIATIVE_ARRAY cd_itm_blur  BEGIN ~%vl_item%~ => ~%vl_equip_blur%~ END
  DEFINE_ASSOCIATIVE_ARRAY cd_itm_strap BEGIN ~%vl_item%~ => ~%vl_equip_spelltrap%~ END
  DEFINE_ASSOCIATIVE_ARRAY cd_itm_291   BEGIN ~%vl_item%~ => ~%vl_equip_291%~ END
  
END