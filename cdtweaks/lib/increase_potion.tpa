ACTION_IF game_includes_pst THEN BEGIN

  ACTION_IF game_is_pst THEN BEGIN // pst but not pstee
  
    ACTION_IF stack > 255 BEGIN OUTER_SET stack = 255 END
  
  END

  // potions
  COPY_EXISTING ~acid.itm~     ~override~ // scent of the storm
                ~addrtear.itm~ ~override~ // adder's tear
                ~bandage.itm~  ~override~ // bandages
                ~bbchrm.itm~   ~override~ // black-barbed charm
                ~bbseed.itm~   ~override~ // black-barbed seed
                ~bloochrm.itm~ ~override~ // blood charm
                ~bloodfly.itm~ ~override~ // blood fly charm
                ~bonechrm.itm~ ~override~ // bone charm
                ~c_1101.itm~   ~override~ // blessed candy
                ~c_1106.itm~   ~override~ // holy candy
                ~c_1301.itm~   ~override~ // mechanus candy
                ~c_2102.itm~   ~override~ // crunchity candy
                ~c_2114.itm~   ~override~ // frosty mint candy
                ~c_2211.itm~   ~override~ // quivering candy
                ~c_2212.itm~   ~override~ // minaurosian chocolate
                ~c_2214.itm~   ~override~ // lucky candy
                ~c_2501.itm~   ~override~ // stinky chocolate
                ~cerepara.itm~ ~override~ // kasseg, cerebral parasite
                ~cflychrm.itm~ ~override~ // corpse fly charm
                ~charchrm.itm~ ~override~ // charcoal charm as sold in stores
                // ~chchar.itm~   ~override~ // charcoal charm, likely unused
                ~clotchrm.itm~ ~override~ // clot charm
                ~cratchrm.itm~ ~override~ // cranium rat charm
                ~dratchrm.itm~ ~override~ // dirty rat charm
                ~embalm.itm~   ~override~ // jar of embalming fluid
                ~embchrm.itm~  ~override~ // dustman embalming charm, lesser
                ~embchrm2.itm~ ~override~ // dustmen embalming charm, greater
                ~hearchrm.itm~ ~override~ // heart charm
                ~knotchrm.itm~ ~override~ // knot charm
                ~lore.itm~     ~override~ // charm of infinite recall
                ~manacle.itm~  ~override~ // shackles of light
                ~murk.itm~     ~override~ // murk
                ~needle.itm~   ~override~ // needle and thread
                ~ratcharm.itm~ ~override~ // rat charm
                ~rochchrm.itm~ ~override~ // cockroach charm
                ~spice.itm~    ~override~ // whispering flask
                ~tbchrm.itm~   ~override~ // thrice-blind charm
                ~tears.itm~    ~override~ // tears of sorrow
    PATCH_IF (stack > $cd_itm_stack("%item%")) BEGIN
      SET $cd_itm_stack("%item%") = stack
      WRITE_SHORT  0x38 $cd_itm_stack("%item%")
    END
    BUT_ONLY

END ELSE BEGIN

  ACTION_IF (original_iwd OR original_bg1) THEN BEGIN // old engines need a header to be able to stack items
    OUTER_SET needs_header = 1
  END ELSE BEGIN
    OUTER_SET needs_header = 0
    ACTION_IF game_is_iwd2 THEN BEGIN // check additional item type for IWD2
      OUTER_SET check_food = 1
    END ELSE BEGIN
      OUTER_SET check_food = 0
    END
  END

  INCLUDE ~cdtweaks/lib/regexp_itm.tpa~ // build regexp array if it doesn't exist

  ACTION_PHP_EACH cd_itm_type AS item => type BEGIN
      
    ACTION_IF (
               ($cd_itm_stack("%item%") > 1) AND     // if item can already stack...
               (stack > $cd_itm_stack("%item%")) AND // and the stack size would increase, and is of the type...
               (
                 (type =  9) OR                     // potion
                 ((type = 71) AND (check_food = 1)) // or iwd2 food
               )                   
              ) BEGIN    

ACTION_IF regexp_debug BEGIN PRINT ~ == check passed, working on %item%~ END
             
      COPY_EXISTING ~%item%.itm~ ~override~
        SET $cd_itm_stack("%item%") = stack
        WRITE_SHORT 0x38 $cd_itm_stack("%item%")
        READ_SHORT 0x68 abil_num
        PATCH_IF ((needs_header = 1) AND (abil_num = 0)) BEGIN // old engines need a header to be able to stack items
          WRITE_SHORT  0x68 1             // add one ability
          WRITE_LONG   0x6a (THIS + 0x38) // push back fx offset for new ability
          INSERT_BYTES 0x72 0x38          // inserts new ability of type default (0)
        END
        BUT_ONLY

    END // item checks

  END // action_php_each

END
